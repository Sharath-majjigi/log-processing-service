version: '3.8'

services:
  # Backend container (Next.js API routes)
  backend:
    build:
      context: .
      dockerfile: Dockerfile  # Uses a separate Dockerfile for the backend
    ports:
      - "3000:3000"  # Backend API exposed on port 4000
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
    networks:
      - app-network
    depends_on:
      - redis  # Ensure Redis is up before backend starts

  # Redis container for BullMQ
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis-data:/data  

  # Worker container to process BullMQ jobs
  worker:
    build:
      context: .
      dockerfile: Dockerfile  # Reusing the backend Dockerfile for the worker
    command: ["node", "src/worker/worker.js"]  # Running the worker script
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
    depends_on:
      - redis  
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
